webpackJsonp([40745882597842],{1006:function(e,s){e.exports={data:{packages:{edges:[{node:{id:"@wokalski/vow",keywords:["async"],name:"@wokalski/vow",version:"0.0.3",category:"library",flags:[],platforms:["browser","node"],description:"Almost sound Promises for Bucklescript",type:"published",license:"MIT",updated:"2018-05-18T20:24:38.945Z",stars:null,score:.14943371979673484,quality:.103834950127715,popularity:.005364042460697902,maintenance:.3325880568490745,slug:"/package/@wokalski/vow"}},{node:{id:"bs-effects",keywords:["async","utilities"],name:"bs-effects",version:"0.9.0",category:"library",flags:["neglected"],platforms:["any"],description:"Bucklescript data structures for effectful sync and async programming",type:"published",license:"BSD-3-Clause",updated:"2018-05-20T14:00:51.139Z",stars:14,score:.54826692785242,quality:.6189199484020398,popularity:.0412601339463974,maintenance:.9947139898587687,slug:"/package/bs-effects"}},{node:{id:"bs-promise-monad",keywords:["async","utilities"],name:"bs-promise-monad",version:"0.2.8",category:"library",flags:[],platforms:["browser","node"],description:"A monadic syntax to work with Promise.",type:"published",license:"MIT",updated:"2018-05-21T17:41:45.916Z",stars:6,score:.4936780039447788,quality:.42982991105759677,popularity:.04234771715916894,maintenance:.9997352274908304,slug:"/package/bs-promise-monad"}},{node:{id:"bs-sentia-promise",keywords:["async"],name:"bs-sentia-promise",version:"0.3.0",category:"library",flags:["neglected"],platforms:["browser","node"],description:"promise library for Ocaml/Reason based on javascript promises.",type:"published",license:"MIT",updated:"2018-05-19T23:25:18.581Z",stars:null,score:.32704427523620005,quality:.7098730382615925,popularity:.027794401157226232,maintenance:.2981552095791233,slug:"/package/bs-sentia-promise"}},{node:{id:"re-sync",keywords:["async"],name:"re-sync",version:"0.4.2",category:"library",flags:["neglected","deprecated"],platforms:["browser","node"],description:"Async support library for Reason/Bucklescript",type:"published",license:"MIT",updated:"2018-05-23T04:20:12.802Z",stars:14,score:.5550336922286593,quality:.6127074542776944,popularity:.061397155197916886,maintenance:.9992355760745146,slug:"/package/re-sync"}},{node:{id:"reason-future",keywords:["async"],name:"reason-future",version:"2.2.1",category:"library",flags:[],platforms:["browser","node"],description:"A Js.Promise alternative for ReasonML.",type:"published",license:"MIT",updated:"2018-05-25T23:59:43.238Z",stars:9,score:.6404865535390246,quality:.9206112922645148,popularity:.040868285619394804,maintenance:.9999979025510917,slug:"/package/reason-future"}},{node:{id:"reason-nact",keywords:["async"],name:"reason-nact",version:"4.2.1",category:"binding",flags:[],platforms:["node"],description:"let reason-nact = (node.js, reason, actors) ⇒ your µ services have never been so typed",type:"published",license:"Apache-2.0",updated:"2018-05-31T10:07:26.374Z",stars:77,score:.666311161376982,quality:.9631404278439947,popularity:.07819723721081033,maintenance:1,slug:"/package/reason-nact"}},{node:{id:"reason_async",keywords:["async","ppx"],name:"reason_async",version:"0.2.1",category:"library",flags:["neglected"],platforms:["any"],description:"[Clone the example repo](https://github.com/jaredly/reason_async_example) to get started quickly.",type:"published",license:"ISC",updated:"2018-05-31T18:01:03.526Z",stars:null,score:.30693669640666965,quality:.6248841937982637,popularity:.008044187381474385,maintenance:.3333027790962129,slug:"/package/reason_async"}}]}},pathContext:{keyword:"async"}}}});
//# sourceMappingURL=path---keyword-async-8519e5cee2c24c4ba259.js.map
{"version":3,"sources":["webpack:///path---packages-unpublished-glennsl-quickiecheck-ca55a6fed6aa0e0edf72.js","webpack:///./.cache/json/packages-unpublished-glennsl-quickiecheck.json"],"names":["webpackJsonp","1071","module","exports","data","package","id","score","name","version","description","keywords","license","updated","stars","type","quality","popularity","maintenance","readme","homepageUrl","repositoryUrl","npmUrl","issuesUrl","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,SAAWC,GAAA,mCAAAC,MAAA,EAAAC,KAAA,uBAAAC,QAAA,QAAAC,YAAA,6CAAAC,UAAA,6DAAAC,QAAA,MAAAC,QAAA,2BAAAC,MAAA,EAAAC,KAAA,cAAAC,QAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,OAAA,odAAAC,YAAA,iDAAAC,cAAA,0CAAAC,OAAA,KAAAC,UAAA,iDAAAC,KAAA,8CAA2jCC,aAAgBnB,GAAA","file":"path---packages-unpublished-glennsl-quickiecheck-ca55a6fed6aa0e0edf72.js","sourcesContent":["webpackJsonp([50711554172541],{\n\n/***/ 1071:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"package\":{\"id\":\"unpublished/glennsl/quickiecheck\",\"score\":0,\"name\":\"glennsl/quickiecheck\",\"version\":\"0.0.1\",\"description\":\"Quickcheck implementation for BuckleScript\",\"keywords\":[\"test\",\"property-based testing\",\"quickcheck\",\"bucklescript\"],\"license\":\"MIT\",\"updated\":\"2017-12-23T12:43:15.626Z\",\"stars\":2,\"type\":\"unpublished\",\"quality\":0,\"popularity\":0,\"maintenance\":0,\"readme\":\"<h1>Quickiecheck - an experimental BuckleScript quickcheck implementation</h1>\\n<p>Alternative name: \\\"recheck\\\"</p>\\n<p>Why make another quickcheck implementation when there are already <code>n</code> implementations for OCaml?</p>\\n<ol>\\n<li>Because BuckleScript targeting JavaScript means you can do <em>evil</em> things.</li>\\n<li>Because I wanted an API that could easily integrate with <code>bs-jest</code> (or whichever test runner you'd prefer)</li>\\n</ol>\\n\",\"homepageUrl\":\"https://github.com/glennsl/quickiecheck#readme\",\"repositoryUrl\":\"https://github.com/glennsl/quickiecheck\",\"npmUrl\":null,\"issuesUrl\":\"https://github.com/glennsl/quickiecheck/issues\",\"slug\":\"packages/unpublished/glennsl/quickiecheck\"}},\"pathContext\":{\"id\":\"unpublished/glennsl/quickiecheck\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---packages-unpublished-glennsl-quickiecheck-ca55a6fed6aa0e0edf72.js","module.exports = {\"data\":{\"package\":{\"id\":\"unpublished/glennsl/quickiecheck\",\"score\":0,\"name\":\"glennsl/quickiecheck\",\"version\":\"0.0.1\",\"description\":\"Quickcheck implementation for BuckleScript\",\"keywords\":[\"test\",\"property-based testing\",\"quickcheck\",\"bucklescript\"],\"license\":\"MIT\",\"updated\":\"2017-12-23T12:43:15.626Z\",\"stars\":2,\"type\":\"unpublished\",\"quality\":0,\"popularity\":0,\"maintenance\":0,\"readme\":\"<h1>Quickiecheck - an experimental BuckleScript quickcheck implementation</h1>\\n<p>Alternative name: \\\"recheck\\\"</p>\\n<p>Why make another quickcheck implementation when there are already <code>n</code> implementations for OCaml?</p>\\n<ol>\\n<li>Because BuckleScript targeting JavaScript means you can do <em>evil</em> things.</li>\\n<li>Because I wanted an API that could easily integrate with <code>bs-jest</code> (or whichever test runner you'd prefer)</li>\\n</ol>\\n\",\"homepageUrl\":\"https://github.com/glennsl/quickiecheck#readme\",\"repositoryUrl\":\"https://github.com/glennsl/quickiecheck\",\"npmUrl\":null,\"issuesUrl\":\"https://github.com/glennsl/quickiecheck/issues\",\"slug\":\"packages/unpublished/glennsl/quickiecheck\"}},\"pathContext\":{\"id\":\"unpublished/glennsl/quickiecheck\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/packages-unpublished-glennsl-quickiecheck.json\n// module id = 1071\n// module chunks = 50711554172541"],"sourceRoot":""}
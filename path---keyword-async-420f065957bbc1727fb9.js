webpackJsonp([40745882597842],{1011:function(e,s){e.exports={data:{packages:{edges:[{node:{id:"@wokalski/vow",keywords:["async"],name:"@wokalski/vow",version:"0.0.3",category:"library",flags:[],platforms:["browser","node"],description:"Almost sound Promises for Bucklescript",type:"published",license:"MIT",updated:"2018-05-02T20:09:04.434Z",stars:null,score:.15033515762253408,quality:.10380359403979608,popularity:.007980997460227934,maintenance:.33257351514147276,slug:"/package/@wokalski/vow"}},{node:{id:"bs-effects",keywords:["async","utilities"],name:"bs-effects",version:"0.8.0",category:"library",flags:["neglected"],platforms:["any"],description:"Bucklescript data structures for effectful sync and async programming",type:"published",license:"BSD-3-Clause",updated:"2018-05-07T18:13:32.901Z",stars:14,score:.5470183815082568,quality:.6115622411328536,popularity:.044079636735173545,maintenance:.9946338180316858,slug:"/package/bs-effects"}},{node:{id:"bs-sentia-promise",keywords:["async"],name:"bs-sentia-promise",version:"0.3.0",category:"library",flags:["neglected"],platforms:["browser","node"],description:"promise library for Ocaml/Reason based on javascript promises.",type:"published",license:"MIT",updated:"2018-05-03T14:37:46.176Z",stars:null,score:.3269375954868005,quality:.7097282145707562,popularity:.028379258645384545,maintenance:.2973896873991117,slug:"/package/bs-sentia-promise"}},{node:{id:"re-sync",keywords:["async"],name:"re-sync",version:"0.4.2",category:"library",flags:["neglected","deprecated"],platforms:["browser","node"],description:"Async support library for Reason/Bucklescript",type:"published",license:"MIT",updated:"2018-05-07T04:28:21.067Z",stars:14,score:.5571854838556375,quality:.6126655976404433,popularity:.06750996178592054,maintenance:.9993066226812353,slug:"/package/re-sync"}},{node:{id:"reason-nact",keywords:["async"],name:"reason-nact",version:"3.2.2",category:"binding",flags:[],platforms:["node"],description:"let reason-nact = (node.js, reason, actors) ⇒ your µ services have never been so typed",type:"published",license:"Apache-2.0",updated:"2018-04-17T12:33:00.837Z",stars:63,score:.6669680179589974,quality:.9618344274887803,popularity:.08119339917818094,maintenance:1,slug:"/package/reason-nact"}},{node:{id:"reason_async",keywords:["async","ppx"],name:"reason_async",version:"0.2.1",category:"library",flags:["neglected"],platforms:["any"],description:"[Clone the example repo](https://github.com/jaredly/reason_async_example) to get started quickly.",type:"published",license:"ISC",updated:"2018-05-01T10:49:58.415Z",stars:null,score:.30624418904301354,quality:.6235863018724639,popularity:.0071786074647848955,maintenance:.33330224533885633,slug:"/package/reason_async"}},{node:{id:"bs-promise-monad",keywords:["async","utilities"],name:"bs-promise-monad",version:"0.2.8",category:"library",flags:[],platforms:["browser","node"],description:"A monadic syntax to work with Promise.",type:"published",license:"MIT",updated:"2018-05-06T03:46:32.186Z",stars:0,score:.4909933731579019,quality:.42978611520359344,popularity:.034717557144847006,maintenance:.9997325531317929,slug:"/package/bs-promise-monad"}}]}},pathContext:{keyword:"async"}}}});
//# sourceMappingURL=path---keyword-async-420f065957bbc1727fb9.js.map
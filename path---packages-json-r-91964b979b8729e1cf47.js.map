{"version":3,"sources":["webpack:///path---packages-json-r-91964b979b8729e1cf47.js","webpack:///./.cache/json/packages-json-r.json"],"names":["webpackJsonp","1094","module","exports","data","package","id","score","name","version","description","keywords","license","updated","stars","type","quality","popularity","maintenance","readme","homepageUrl","repositoryUrl","npmUrl","issuesUrl","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,SAAWC,GAAA,SAAAC,MAAA,kBAAAC,KAAA,SAAAC,QAAA,QAAAC,YAAA,oHAAAC,UAAA,uBAAAC,QAAA,MAAAC,QAAA,2BAAAC,MAAA,EAAAC,KAAA,YAAAC,QAAA,kBAAAC,WAAA,oBAAAC,YAAA,kBAAAC,OAAA,m1CAAouDC,YAAA,+BAAAC,cAAA,+BAAAC,OAAA,uCAAAC,UAAA,sCAAAC,KAAA,oBAAuQC,aAAgBnB,GAAA","file":"path---packages-json-r-91964b979b8729e1cf47.js","sourcesContent":["webpackJsonp([108229127465274],{\n\n/***/ 1094:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"package\":{\"id\":\"json-r\",\"score\":0.6055095673744575,\"name\":\"json-r\",\"version\":\"2.3.0\",\"description\":\"A BuckleScript lib for handling JSON in `Result` favor, written in [ReasonML](http://facebook.github.io/reason/).\",\"keywords\":[\"json\",\"bucklescript\"],\"license\":\"MIT\",\"updated\":\"2018-01-02T10:47:34.446Z\",\"stars\":7,\"type\":\"published\",\"quality\":0.8132370982927404,\"popularity\":0.033172249457909184,\"maintenance\":0.9997947159324776,\"readme\":\"<h1>JsonR</h1>\\n<p>A BuckleScript lib for handling JSON in <code>Result</code> favor, written in <a href=\\\"http://facebook.github.io/reason/\\\">ReasonML</a>.</p>\\n<h2>Usage</h2>\\n<p>Add <code>json-r</code> to your project's dependencies by <code>yarn</code> or <code>npm</code>, And add it to <code>bs-dependencies</code> for <code>bsconfig.json</code>, e.g.</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"name\\\": \\\"coolproj\\\",\\n    \\\"bs-dependencies\\\": [\\n      \\\"json-r\\\"\\n    ]\\n}\\n</code></pre>\\n<h3>Basic example</h3>\\n<pre><code class=\\\"language-reason\\\">open JsonR.Json;\\nopen Js_result;\\n\\nlet json = parse_result json_source;\\n\\n/* Access a field and its value, return a Js_result type */\\n\\nlet title = json |> string_for \\\"title\\\";\\n\\n/* or more verbose */\\nlet title = json |> member \\\"title\\\" |> to_string;\\n\\n\\n/* you can also pass key path */\\nlet age = json |> int_for \\\"author.age\\\";\\n\\n/ * or */\\nlet age = json |> member \\\"author.age\\\" |> to_int;\\n\\nswitch age {\\n| Ok a => DoWhatYouWant a\\n| Error e => HeyWeCantParseOutTheAge_CheckTheErrorMessage e\\n};\\n</code></pre>\\n<p>You can open <code>__tests__/test.re</code> to view more examples.</p>\\n<h3>Advance usage</h3>\\n<p>Need to use the another <code>Result</code> type such as <code>Containers.Result</code>? Just <code>Module Json = JsonR.Impl Containers.Result;</code>.</p>\\n<h2>LICENSE</h2>\\n<p>MIT.</p>\\n\",\"homepageUrl\":\"https://github.com/cxa/JsonR\",\"repositoryUrl\":\"https://github.com/cxa/JsonR\",\"npmUrl\":\"https://www.npmjs.com/package/json-r\",\"issuesUrl\":\"https://github.com/cxa/JsonR/issues\",\"slug\":\"packages/json-r\"}},\"pathContext\":{\"id\":\"json-r\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---packages-json-r-91964b979b8729e1cf47.js","module.exports = {\"data\":{\"package\":{\"id\":\"json-r\",\"score\":0.6055095673744575,\"name\":\"json-r\",\"version\":\"2.3.0\",\"description\":\"A BuckleScript lib for handling JSON in `Result` favor, written in [ReasonML](http://facebook.github.io/reason/).\",\"keywords\":[\"json\",\"bucklescript\"],\"license\":\"MIT\",\"updated\":\"2018-01-02T10:47:34.446Z\",\"stars\":7,\"type\":\"published\",\"quality\":0.8132370982927404,\"popularity\":0.033172249457909184,\"maintenance\":0.9997947159324776,\"readme\":\"<h1>JsonR</h1>\\n<p>A BuckleScript lib for handling JSON in <code>Result</code> favor, written in <a href=\\\"http://facebook.github.io/reason/\\\">ReasonML</a>.</p>\\n<h2>Usage</h2>\\n<p>Add <code>json-r</code> to your project's dependencies by <code>yarn</code> or <code>npm</code>, And add it to <code>bs-dependencies</code> for <code>bsconfig.json</code>, e.g.</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"name\\\": \\\"coolproj\\\",\\n    \\\"bs-dependencies\\\": [\\n      \\\"json-r\\\"\\n    ]\\n}\\n</code></pre>\\n<h3>Basic example</h3>\\n<pre><code class=\\\"language-reason\\\">open JsonR.Json;\\nopen Js_result;\\n\\nlet json = parse_result json_source;\\n\\n/* Access a field and its value, return a Js_result type */\\n\\nlet title = json |> string_for \\\"title\\\";\\n\\n/* or more verbose */\\nlet title = json |> member \\\"title\\\" |> to_string;\\n\\n\\n/* you can also pass key path */\\nlet age = json |> int_for \\\"author.age\\\";\\n\\n/ * or */\\nlet age = json |> member \\\"author.age\\\" |> to_int;\\n\\nswitch age {\\n| Ok a => DoWhatYouWant a\\n| Error e => HeyWeCantParseOutTheAge_CheckTheErrorMessage e\\n};\\n</code></pre>\\n<p>You can open <code>__tests__/test.re</code> to view more examples.</p>\\n<h3>Advance usage</h3>\\n<p>Need to use the another <code>Result</code> type such as <code>Containers.Result</code>? Just <code>Module Json = JsonR.Impl Containers.Result;</code>.</p>\\n<h2>LICENSE</h2>\\n<p>MIT.</p>\\n\",\"homepageUrl\":\"https://github.com/cxa/JsonR\",\"repositoryUrl\":\"https://github.com/cxa/JsonR\",\"npmUrl\":\"https://www.npmjs.com/package/json-r\",\"issuesUrl\":\"https://github.com/cxa/JsonR/issues\",\"slug\":\"packages/json-r\"}},\"pathContext\":{\"id\":\"json-r\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/packages-json-r.json\n// module id = 1094\n// module chunks = 108229127465274"],"sourceRoot":""}
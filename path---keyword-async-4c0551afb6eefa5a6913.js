webpackJsonp([40745882597842],{1009:function(e,s){e.exports={data:{packages:{edges:[{node:{id:"@wokalski/vow",keywords:["async"],name:"@wokalski/vow",version:"0.0.3",category:"library",flags:[],platforms:["browser","node"],description:"Almost sound Promises for Bucklescript",type:"published",license:"MIT",updated:"2018-06-03T02:56:39.816Z",stars:null,score:.14938210409430885,quality:.10385155562804275,popularity:.005205623570357981,maintenance:.3325847690179164,slug:"/package/@wokalski/vow"}},{node:{id:"bs-promise-monad",keywords:["async","utilities"],name:"bs-promise-monad",version:"0.2.8",category:"library",flags:[],platforms:["browser","node"],description:"A monadic syntax to work with Promise.",type:"published",license:"MIT",updated:"2018-06-06T04:03:06.875Z",stars:9,score:.4880092709100992,quality:.4298530920369451,popularity:.04321698802487046,maintenance:.9826497071151745,slug:"/package/bs-promise-monad"}},{node:{id:"bs-sentia-promise",keywords:["async"],name:"bs-sentia-promise",version:"0.3.0",category:"library",flags:["neglected"],platforms:["browser","node"],description:"promise library for Ocaml/Reason based on javascript promises.",type:"published",license:"MIT",updated:"2018-06-04T08:38:56.636Z",stars:null,score:.3268953236531273,quality:.7099563221460772,popularity:.027470921396880572,maintenance:.2979817272011313,slug:"/package/bs-sentia-promise"}},{node:{id:"bs-effects",keywords:["async","utilities"],name:"bs-effects",version:"0.9.0",category:"library",flags:["neglected"],platforms:["any"],description:"Bucklescript data structures for effectful sync and async programming",type:"published",license:"BSD-3-Clause",updated:"2018-06-05T01:53:02.236Z",stars:15,score:.5570740657487671,quality:.6189989326764396,popularity:.06612537392686707,maintenance:.9949443002040907,slug:"/package/bs-effects"}},{node:{id:"re-sync",keywords:["async"],name:"re-sync",version:"0.4.2",category:"library",flags:["neglected","deprecated"],platforms:["browser","node"],description:"Async support library for Reason/Bucklescript",type:"published",license:"MIT",updated:"2018-05-23T04:20:12.802Z",stars:14,score:.5550076354942042,quality:.6127467006297531,popularity:.061287311552119944,maintenance:.9992373321772468,slug:"/package/re-sync"}},{node:{id:"reason-future",keywords:["async"],name:"reason-future",version:"2.2.1",category:"library",flags:[],platforms:["browser","node"],description:"A Js.Promise alternative for ReasonML.",type:"published",license:"MIT",updated:"2018-05-25T23:59:43.238Z",stars:9,score:.6406388451626095,quality:.9206652834254067,popularity:.041257120851037256,maintenance:.9999979081060701,slug:"/package/reason-future"}},{node:{id:"reason-nact",keywords:["async"],name:"reason-nact",version:"4.2.2",category:"binding",flags:[],platforms:["node"],description:"let reason-nact = (node.js, reason, actors) ⇒ your µ services have never been so typed",type:"published",license:"Apache-2.0",updated:"2018-06-04T15:23:34.698Z",stars:77,score:.667028584753946,quality:.9650504685597603,popularity:.0786098405314798,maintenance:1,slug:"/package/reason-nact"}},{node:{id:"reason_async",keywords:["async","ppx"],name:"reason_async",version:"0.2.1",category:"library",flags:["neglected"],platforms:["any"],description:"[Clone the example repo](https://github.com/jaredly/reason_async_example) to get started quickly.",type:"published",license:"ISC",updated:"2018-05-31T18:01:03.526Z",stars:null,score:.3070326233750492,quality:.6250105432146447,popularity:.008210074134754209,maintenance:.33330266989569096,slug:"/package/reason_async"}}]}},pathContext:{keyword:"async"}}}});
//# sourceMappingURL=path---keyword-async-4c0551afb6eefa5a6913.js.map
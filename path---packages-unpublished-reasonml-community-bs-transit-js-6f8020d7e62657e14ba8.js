webpackJsonp([0xa10368af6879],{1126:function(t,e){t.exports={data:{package:{id:"unpublished/reasonml-community/bs-transit-js",score:0,name:"reasonml-community/bs-transit-js",version:"0.0.1",description:"BuckleScript bindings for transit-js",keywords:["cqrs","bucklescript"],license:null,updated:"2018-01-13T06:57:42.253Z",stars:7,type:"unpublished",quality:0,popularity:0,maintenance:0,readme:"<h1>Transit-js Bucklescript bindings</h1>\n<p>Make client-server communication great again.</p>\n<p>This repo provides rudimentary bindings to transit-js with Bucklescript,\nprototyped in under 15min. thanks to Bucklescript compiling at the speed of light.</p>\n<p>Json is nice, but I want to send records and variants (among other things) straight over\nthe wire. Feels like a shame to lose all that information &#x26; type everything as js objects.\nSince transit provides a way to encode/decode custom data, it seemed like\na good fit for encoding ml types. If this thing works out, I'll look into automating\neverything with ppx.</p>\n<p>Head over to <code>src/example.re</code> to get up &#x26; running ASAP.</p>\n",homepageUrl:"https://github.com/BuckleTypes/bs-transit-js",repositoryUrl:"https://github.com/reasonml-community/bs-transit-js",npmUrl:null,issuesUrl:null,slug:"packages/unpublished/reasonml-community/bs-transit-js"}},pathContext:{id:"unpublished/reasonml-community/bs-transit-js"}}}});
//# sourceMappingURL=path---packages-unpublished-reasonml-community-bs-transit-js-6f8020d7e62657e14ba8.js.map
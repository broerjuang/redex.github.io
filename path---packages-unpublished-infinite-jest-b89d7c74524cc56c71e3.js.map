{"version":3,"sources":["webpack:///path---packages-unpublished-infinite-jest-b89d7c74524cc56c71e3.js","webpack:///./.cache/json/packages-unpublished-infinite-jest.json"],"names":["webpackJsonp","964","module","exports","data","package","id","updated","name","version","description","keywords","license","type","stars","readme","homepageUrl","repositoryUrl","npmUrl","issuesUrl","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,SAAWC,GAAA,4BAAAC,QAAA,2BAAAC,KAAA,gBAAAC,QAAA,QAAAC,YAAA,GAAAC,UAAA,+BAAAC,QAAA,MAAAC,KAAA,cAAAC,MAAA,EAAAC,OAAA,62BAAm4BC,YAAA,KAAAC,cAAA,2CAAAC,OAAA,KAAAC,UAAA,KAAAC,KAAA,uCAAuXC,aAAgBf,GAAA","file":"path---packages-unpublished-infinite-jest-b89d7c74524cc56c71e3.js","sourcesContent":["webpackJsonp([264853551384263],{\n\n/***/ 964:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"package\":{\"id\":\"unpublished/infinite-jest\",\"updated\":\"2017-12-20T12:35:01.328Z\",\"name\":\"infinite-jest\",\"version\":\"0.0.0\",\"description\":\"\",\"keywords\":[\"test\",\"ocaml\",\"bucklescript\"],\"license\":\"MIT\",\"type\":\"unpublished\",\"stars\":4,\"readme\":\"<h1>infinite-jest</h1>\\n<p>An experimental cross-platform native/BuckleScript test framework</p>\\n<blockquote>\\n<p>Alas, poor Yorick! I knew him, Horatio: a fellow of infinite jest, of most excellent fancy: he hath borne me on his back a thousand times; and now, how abhorred in my imagination it is!</p>\\n</blockquote>\\n<h2>Example</h2>\\n<pre><code class=\\\"language-ml\\\">open InfiniteJest\\n\\nlet myTests =\\n  open InfiniteJest.Test in\\n  \\n  describe \\\"Assertions\\\" (fun () -> [\\n  \\n    test \\\"completely bananas\\\" (fun () ->\\n      \\\"bananas\\\" |> Expect.stringContaining \\\"nanas\\\");\\n      \\n    test \\\"succ\\\" (fun () ->\\n      2 |> succ\\n        |> Expect.toEqual 3);\\n        \\n  ])\\n\\nlet _ = \\n  run [myTests]\\n</code></pre>\\n<h2>Output comparison</h2>\\n<p>Jest/BuckleScript (Left) vs Native runner (Right)\\n<img src=\\\"images/output-comparison.png\\\" alt=\\\"Output comparison\\\">)</p>\\n\",\"homepageUrl\":null,\"repositoryUrl\":\"https://github.com/glennsl/infinite-jest\",\"npmUrl\":null,\"issuesUrl\":null,\"slug\":\"packages/unpublished/infinite-jest\"}},\"pathContext\":{\"id\":\"unpublished/infinite-jest\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---packages-unpublished-infinite-jest-b89d7c74524cc56c71e3.js","module.exports = {\"data\":{\"package\":{\"id\":\"unpublished/infinite-jest\",\"updated\":\"2017-12-20T12:35:01.328Z\",\"name\":\"infinite-jest\",\"version\":\"0.0.0\",\"description\":\"\",\"keywords\":[\"test\",\"ocaml\",\"bucklescript\"],\"license\":\"MIT\",\"type\":\"unpublished\",\"stars\":4,\"readme\":\"<h1>infinite-jest</h1>\\n<p>An experimental cross-platform native/BuckleScript test framework</p>\\n<blockquote>\\n<p>Alas, poor Yorick! I knew him, Horatio: a fellow of infinite jest, of most excellent fancy: he hath borne me on his back a thousand times; and now, how abhorred in my imagination it is!</p>\\n</blockquote>\\n<h2>Example</h2>\\n<pre><code class=\\\"language-ml\\\">open InfiniteJest\\n\\nlet myTests =\\n  open InfiniteJest.Test in\\n  \\n  describe \\\"Assertions\\\" (fun () -> [\\n  \\n    test \\\"completely bananas\\\" (fun () ->\\n      \\\"bananas\\\" |> Expect.stringContaining \\\"nanas\\\");\\n      \\n    test \\\"succ\\\" (fun () ->\\n      2 |> succ\\n        |> Expect.toEqual 3);\\n        \\n  ])\\n\\nlet _ = \\n  run [myTests]\\n</code></pre>\\n<h2>Output comparison</h2>\\n<p>Jest/BuckleScript (Left) vs Native runner (Right)\\n<img src=\\\"images/output-comparison.png\\\" alt=\\\"Output comparison\\\">)</p>\\n\",\"homepageUrl\":null,\"repositoryUrl\":\"https://github.com/glennsl/infinite-jest\",\"npmUrl\":null,\"issuesUrl\":null,\"slug\":\"packages/unpublished/infinite-jest\"}},\"pathContext\":{\"id\":\"unpublished/infinite-jest\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/packages-unpublished-infinite-jest.json\n// module id = 964\n// module chunks = 264853551384263"],"sourceRoot":""}
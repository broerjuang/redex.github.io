{"version":3,"sources":["webpack:///path---packages-unpublished-tom-lingham-bs-node-http-5454f395f0a7ac8393f0.js","webpack:///./.cache/json/packages-unpublished-tom-lingham-bs-node-http.json"],"names":["webpackJsonp","1139","module","exports","data","package","id","score","name","version","description","keywords","license","updated","stars","type","quality","popularity","maintenance","readme","homepageUrl","repositoryUrl","npmUrl","issuesUrl","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,SAAWC,GAAA,sCAAAC,MAAA,EAAAC,KAAA,0BAAAC,QAAA,QAAAC,YAAA,gDAAAC,UAAA,8BAAAC,QAAA,MAAAC,QAAA,2BAAAC,MAAA,EAAAC,KAAA,cAAAC,QAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,OAAA,80EAA2rFC,YAAA,oDAAAC,cAAA,6CAAAC,OAAA,KAAAC,UAAA,oDAAAC,KAAA,iDAAuRC,aAAgBnB,GAAA","file":"path---packages-unpublished-tom-lingham-bs-node-http-5454f395f0a7ac8393f0.js","sourcesContent":["webpackJsonp([121010013015987],{\n\n/***/ 1139:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"package\":{\"id\":\"unpublished/TomLingham/bs-node-http\",\"score\":0,\"name\":\"TomLingham/bs-node-http\",\"version\":\"0.2.0\",\"description\":\"BuckleScript bindings for Node http in Reason\",\"keywords\":[\"http\",\"node\",\"bucklescript\"],\"license\":\"MIT\",\"updated\":\"2018-01-16T07:17:12.771Z\",\"stars\":2,\"type\":\"unpublished\",\"quality\":0,\"popularity\":0,\"maintenance\":0,\"readme\":\"<h1>bs-node-http</h1>\\n<p><a href=\\\"https://www.npmjs.com/package/bs-node-http\\\"><img src=\\\"https://img.shields.io/npm/v/bs-node-http.svg\\\" alt=\\\"npm\\\"></a>\\n<a href=\\\"https://www.npmjs.com/package/bs-node-http\\\"><img src=\\\"https://img.shields.io/npm/dw/bs-node-http.svg\\\" alt=\\\"npm\\\"></a></p>\\n<p>Node <code>http</code> bindings for\\n<a href=\\\"https://github.com/BuckleScript/bucklescript\\\">Bucklescript</a> in\\n<a href=\\\"https://github.com/facebook/reason\\\">Reason</a></p>\\n<h2>Status</h2>\\n<p>Obligatory \\\"this is just a WIP\\\" section. Feel free to pull down and extend\\nthe API and/or make it better ... I don't pretend to be a ReasonML wizard.</p>\\n<p>I will be accepting PR's. Node HTTP is one of my most used modules and I'm\\nsurprised this wasn't done yet. A good alternative, though, is the\\n<a href=\\\"https://github.com/reasonml-community/bs-express\\\">bs-express</a> project if\\nyou are after routing as well.</p>\\n<h2>Installation</h2>\\n<p>Install <code>bs-node-http</code> from npm. <code>npm i -S bs-node-http</code>.</p>\\n<p>Then, add <code>bs-node-http</code> to yor <code>bs-dependencies</code> in your <code>bsconfig.json</code>.</p>\\n<pre><code class=\\\"language-json\\\">{\\n  \\\"bs-dependencies\\\": [\\\"bs-node-http\\\"]\\n}\\n</code></pre>\\n<h2>Usage</h2>\\n<p>The api is modified to favour piping the response so doesn't map 1 to 1 with\\nthe Node API. It's very minimal at the moment - if what you want isn't added\\nfeel free to add a binding in <code>src/NodeHTTP.re</code> then implement the API in\\n<code>src/Http.re</code></p>\\n<pre><code class=\\\"language-java\\\">open Http;\\n\\nlet server =\\n  create_server((~request as _, ~response) =>\\n    switch (ClientRequest.getMethod(request)) {\\n    | `GET => print_string(\\\"GET money, GET paid\\\")\\n    | `POST => print_string(\\\"POSTman Pat\\\")\\n    | `PUT => print_string(\\\"PUTting the tee-pee in HTTP\\\")\\n    | _ => print_string(\\\"We don't accept other methods...\\\")\\n    };\\n\\n    Response.(\\n      response\\n      |> setStatusCode(200)\\n      |> setHeader(\\\"x-reason\\\", \\\"reason-ml\\\")\\n      |> write(\\\"Hello, world!\\\")\\n      |> write(\\\"UmVhc29uTUwgaXMgcHJldHR5IGdyZWF0IQ==\\\", ~encoding=`base64)\\n      |> end_\\n    )\\n  );\\n\\nServer.(\\n  server\\n  |> listen(~port=3000)\\n  |> on(`request((~request as _, ~response as _) => print_string(\\\"Request event fired!\\\")))\\n  |> on(`close(() => print_string(\\\"Whoops, the server was closed :(\\\")))\\n);\\n</code></pre>\\n\",\"homepageUrl\":\"https://github.com/TomLingham/bs-node-http#readme\",\"repositoryUrl\":\"https://github.com/TomLingham/bs-node-http\",\"npmUrl\":null,\"issuesUrl\":\"https://github.com/TomLingham/bs-node-http/issues\",\"slug\":\"packages/unpublished/TomLingham/bs-node-http\"}},\"pathContext\":{\"id\":\"unpublished/TomLingham/bs-node-http\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---packages-unpublished-tom-lingham-bs-node-http-5454f395f0a7ac8393f0.js","module.exports = {\"data\":{\"package\":{\"id\":\"unpublished/TomLingham/bs-node-http\",\"score\":0,\"name\":\"TomLingham/bs-node-http\",\"version\":\"0.2.0\",\"description\":\"BuckleScript bindings for Node http in Reason\",\"keywords\":[\"http\",\"node\",\"bucklescript\"],\"license\":\"MIT\",\"updated\":\"2018-01-16T07:17:12.771Z\",\"stars\":2,\"type\":\"unpublished\",\"quality\":0,\"popularity\":0,\"maintenance\":0,\"readme\":\"<h1>bs-node-http</h1>\\n<p><a href=\\\"https://www.npmjs.com/package/bs-node-http\\\"><img src=\\\"https://img.shields.io/npm/v/bs-node-http.svg\\\" alt=\\\"npm\\\"></a>\\n<a href=\\\"https://www.npmjs.com/package/bs-node-http\\\"><img src=\\\"https://img.shields.io/npm/dw/bs-node-http.svg\\\" alt=\\\"npm\\\"></a></p>\\n<p>Node <code>http</code> bindings for\\n<a href=\\\"https://github.com/BuckleScript/bucklescript\\\">Bucklescript</a> in\\n<a href=\\\"https://github.com/facebook/reason\\\">Reason</a></p>\\n<h2>Status</h2>\\n<p>Obligatory \\\"this is just a WIP\\\" section. Feel free to pull down and extend\\nthe API and/or make it better ... I don't pretend to be a ReasonML wizard.</p>\\n<p>I will be accepting PR's. Node HTTP is one of my most used modules and I'm\\nsurprised this wasn't done yet. A good alternative, though, is the\\n<a href=\\\"https://github.com/reasonml-community/bs-express\\\">bs-express</a> project if\\nyou are after routing as well.</p>\\n<h2>Installation</h2>\\n<p>Install <code>bs-node-http</code> from npm. <code>npm i -S bs-node-http</code>.</p>\\n<p>Then, add <code>bs-node-http</code> to yor <code>bs-dependencies</code> in your <code>bsconfig.json</code>.</p>\\n<pre><code class=\\\"language-json\\\">{\\n  \\\"bs-dependencies\\\": [\\\"bs-node-http\\\"]\\n}\\n</code></pre>\\n<h2>Usage</h2>\\n<p>The api is modified to favour piping the response so doesn't map 1 to 1 with\\nthe Node API. It's very minimal at the moment - if what you want isn't added\\nfeel free to add a binding in <code>src/NodeHTTP.re</code> then implement the API in\\n<code>src/Http.re</code></p>\\n<pre><code class=\\\"language-java\\\">open Http;\\n\\nlet server =\\n  create_server((~request as _, ~response) =>\\n    switch (ClientRequest.getMethod(request)) {\\n    | `GET => print_string(\\\"GET money, GET paid\\\")\\n    | `POST => print_string(\\\"POSTman Pat\\\")\\n    | `PUT => print_string(\\\"PUTting the tee-pee in HTTP\\\")\\n    | _ => print_string(\\\"We don't accept other methods...\\\")\\n    };\\n\\n    Response.(\\n      response\\n      |> setStatusCode(200)\\n      |> setHeader(\\\"x-reason\\\", \\\"reason-ml\\\")\\n      |> write(\\\"Hello, world!\\\")\\n      |> write(\\\"UmVhc29uTUwgaXMgcHJldHR5IGdyZWF0IQ==\\\", ~encoding=`base64)\\n      |> end_\\n    )\\n  );\\n\\nServer.(\\n  server\\n  |> listen(~port=3000)\\n  |> on(`request((~request as _, ~response as _) => print_string(\\\"Request event fired!\\\")))\\n  |> on(`close(() => print_string(\\\"Whoops, the server was closed :(\\\")))\\n);\\n</code></pre>\\n\",\"homepageUrl\":\"https://github.com/TomLingham/bs-node-http#readme\",\"repositoryUrl\":\"https://github.com/TomLingham/bs-node-http\",\"npmUrl\":null,\"issuesUrl\":\"https://github.com/TomLingham/bs-node-http/issues\",\"slug\":\"packages/unpublished/TomLingham/bs-node-http\"}},\"pathContext\":{\"id\":\"unpublished/TomLingham/bs-node-http\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/packages-unpublished-tom-lingham-bs-node-http.json\n// module id = 1139\n// module chunks = 121010013015987"],"sourceRoot":""}
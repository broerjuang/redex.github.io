webpackJsonp([40745882597842],{1012:function(e,s){e.exports={data:{packages:{edges:[{node:{id:"@wokalski/vow",keywords:["async"],name:"@wokalski/vow",version:"0.0.3",category:"library",flags:[],platforms:["browser","node"],description:"Almost sound Promises for Bucklescript",type:"published",license:"MIT",updated:"2018-07-03T19:49:10.130Z",stars:null,score:.14942179777566011,quality:.10392505295028127,popularity:.005234320887715001,maintenance:.33260648451393,slug:"/package/@wokalski/vow"}},{node:{id:"bs-promise-monad",keywords:["async","utilities"],name:"bs-promise-monad",version:"0.2.8",category:"library",flags:[],platforms:["browser","node"],description:"A monadic syntax to work with Promise.",type:"published",license:"MIT",updated:"2018-07-08T17:45:57.835Z",stars:9,score:.48835365087720695,quality:.42995559031151476,popularity:.04384077450705921,maintenance:.9829220077322338,slug:"/package/bs-promise-monad"}},{node:{id:"bs-sentia-promise",keywords:["async"],name:"bs-sentia-promise",version:"0.3.0",category:"library",flags:["neglected"],platforms:["browser","node"],description:"promise library for Ocaml/Reason based on javascript promises.",type:"published",license:"MIT",updated:"2018-07-06T07:28:33.653Z",stars:null,score:.3273820095354415,quality:.7102174834375525,popularity:.027487632300519545,maintenance:.2991316948542682,slug:"/package/bs-sentia-promise"}},{node:{id:"re-sync",keywords:["async"],name:"re-sync",version:"0.4.2",category:"library",flags:["neglected","deprecated"],platforms:["browser","node"],description:"Async support library for Reason/Bucklescript",type:"published",license:"MIT",updated:"2018-06-23T06:37:35.581Z",stars:14,score:.5558661973323192,quality:.6128683012286623,popularity:.063842383673671,maintenance:.9990310647941021,slug:"/package/re-sync"}},{node:{id:"reason-future",keywords:["async"],name:"reason-future",version:"2.2.1",category:"library",flags:[],platforms:["browser","node"],description:"A Js.Promise alternative for ReasonML.",type:"published",license:"MIT",updated:"2018-06-25T19:01:22.647Z",stars:42,score:.6701963856403333,quality:.9466346656605084,popularity:.10350646070515354,maintenance:.9999392134153633,slug:"/package/reason-future"}},{node:{id:"reason-nact",keywords:["async"],name:"reason-nact",version:"5.0.0",category:"binding",flags:[],platforms:["node"],description:"let reason-nact = (node.js, reason, actors) ⇒ your µ services have never been so typed",type:"published",license:"Apache-2.0",updated:"2018-07-09T05:40:40.342Z",stars:78,score:.6501267663931667,quality:.9054493319923242,popularity:.08141725672972538,maintenance:.9999883626859016,slug:"/package/reason-nact"}},{node:{id:"reason_async",keywords:["async","ppx"],name:"reason_async",version:"0.2.1",category:"library",flags:["neglected"],platforms:["any"],description:"[Clone the example repo](https://github.com/jaredly/reason_async_example) to get started quickly.",type:"published",license:"ISC",updated:"2018-06-30T19:29:07.717Z",stars:null,score:.3058502084035595,quality:.6255651789904924,popularity:.005567051299569558,maintenance:.33209196214732123,slug:"/package/reason_async"}},{node:{id:"bs-effects",keywords:["async","utilities"],name:"bs-effects",version:"0.9.0",category:"library",flags:["neglected"],platforms:["any"],description:"Bucklescript data structures for effectful sync and async programming",type:"published",license:"BSD-3-Clause",updated:"2018-07-07T10:57:14.588Z",stars:18,score:.5564141990021956,quality:.6192411470645572,popularity:.06937623400599684,maintenance:.9896004942306558,slug:"/package/bs-effects"}}]}},pathContext:{keyword:"async"}}}});
//# sourceMappingURL=path---keyword-async-1ce6030fe0508ced6e9f.js.map
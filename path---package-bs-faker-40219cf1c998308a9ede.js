webpackJsonp([0x6c9001f1a8e3],{1117:function(s,a){s.exports={data:{package:{id:"bs-faker",stars:0,name:"bs-faker",version:"0.3.2",category:"binding",flags:[],platforms:["browser","node"],description:"Faker.js bindings for BuckleScript in Reason",keywords:["utilities","testing"],license:"MIT",updated:"2018-08-07T21:01:27.372Z",type:"published",score:.5650188958542512,quality:.7026980173273363,popularity:.01858498001522013,maintenance:.9934421361449237,readme:'<h1 id="bs-faker-bucklescript-binding-coverage"><a href="#bs-faker-bucklescript-binding-coverage" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>bs-faker <img src="https://img.shields.io/badge/binding%20coverage-28%2F148-red.svg" alt="BuckleScript binding coverage"></h1>\n<p><a href="https://github.com/marak/Faker.js/">Faker.js</a> bindings for <a href="https://github.com/bloomberg/bucklescript">BuckleScript</a> in <a href="https://github.com/facebook/reason">Reason</a></p>\n<h1 id="install"><a href="#install" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Install</h1>\n<div class="redex-codeblock"><pre class="hljs lang-none"><code>npm install --save bs-faker</code></pre></div>\n<p>Then add <code>bs-faker</code> as a dependency to <code>bsconfig.json</code></p>\n<h1 id="usage"><a href="#usage" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h1>\n<p>Don\'t hesitate to view the interface file <code>Faker.rei</code> to see library usage.</p>\n<h2 id="api"><a href="#api" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>API</h2>\n<p>When using optional params (<code>~param=?</code>), don\'t forget to add a unit <code>()</code> parameter in the end to invoke the function\nlike so:</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">let</span> narrowFood = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.food(~width=<span class="hljs-number">200</span>, ()); <span class="hljs-comment">/* =&gt; "https://someimage/with/width/of/200" */</span>\n\n<span class="hljs-comment">/* Without the optional parameters, you don\'t have to add the unit */</span>\n<span class="hljs-keyword">let</span> defaultFood = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.food(); <span class="hljs-comment">/* =&gt; "https://someimage/with/default/width" */</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-keyword">let</span> narrowFood = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.food ~width:<span class="hljs-number">200</span> <span class="hljs-literal">()</span>\n<span class="hljs-keyword">let</span> defaultFood = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.food <span class="hljs-literal">()</span></code></pre>\n      </div>\n    </div>\n  \n<h3 id="fakerimage"><a href="#fakerimage" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>Faker.Image</code></h3>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">let</span> avatar = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.avatar(); <span class="hljs-comment">/* =&gt; string; "https://" */</span>\n<span class="hljs-keyword">let</span> abstract = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.abstract(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> animals = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.animals(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> business = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.business(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> cats = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.cats(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> city = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.city(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> dataUri = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.dataUri(~width: int=?, ~height: int=?, ()); <span class="hljs-comment">/* =&gt; string; "data:inage/svg+xml;..." */</span>\n<span class="hljs-keyword">let</span> fashion = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.fashion(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> food = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.food(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> image = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.image(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> imageUrl = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.imageUrl(~width: int=?, ~height: int=?, ~category: string=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/640/480" */</span>\n<span class="hljs-keyword">let</span> nature = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.nature(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> nightlife = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.nightlife(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> people = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.people(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> sports = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.sports(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> technics = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.technics(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span>\n<span class="hljs-keyword">let</span> transport = <span class="hljs-type">Faker</span>.<span class="hljs-type">Image</span>.transport(~width: int=?, ~height: int=?, ~randomize: bool=?, ()); <span class="hljs-comment">/* =&gt; string; "http://lorempixel.com/..." */</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">904</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h3 id="fakername"><a href="#fakername" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>Faker.Name</code></h3>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">let</span> findName = <span class="hljs-type">Faker</span>.<span class="hljs-type">Name</span>.findName(~firstName: string=?, ~lastName: string=?, ~gender: string=?, ()); <span class="hljs-comment">/* =&gt; string; "Mollie Hills" */</span>\n<span class="hljs-keyword">let</span> firstName = <span class="hljs-type">Faker</span>.<span class="hljs-type">Name</span>.firstName(~gender: string=?, ()); <span class="hljs-comment">/* =&gt; string; "Max" */</span>\n<span class="hljs-keyword">let</span> lastName = <span class="hljs-type">Faker</span>.<span class="hljs-type">Name</span>.lastName(~gender: string=?, ()); <span class="hljs-comment">/* =&gt; string; "Bartoletti" */</span>\n<span class="hljs-keyword">let</span> <span class="hljs-keyword">prefix</span> = <span class="hljs-type">Faker</span>.<span class="hljs-type">Name</span>.<span class="hljs-keyword">prefix</span>(~gender: string=?, ()); <span class="hljs-comment">/* =&gt; string; "Dr." */</span>\n<span class="hljs-keyword">let</span> suffix = <span class="hljs-type">Faker</span>.<span class="hljs-type">Name</span>.suffix(); <span class="hljs-comment">/* =&gt; string; "MD" */</span>\n<span class="hljs-keyword">let</span> title = <span class="hljs-type">Faker</span>.<span class="hljs-type">Name</span>.title(); <span class="hljs-comment">/* =&gt; string; "Senior Creative Specialist" */</span>\n<span class="hljs-keyword">let</span> jobArea = <span class="hljs-type">Faker</span>.<span class="hljs-type">Name</span>.jobArea(); <span class="hljs-comment">/* =&gt; string; "Tactics" */</span>\n<span class="hljs-keyword">let</span> jobType = <span class="hljs-type">Faker</span>.<span class="hljs-type">Name</span>.jobType(); <span class="hljs-comment">/* =&gt; string; "Assistant" */</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">904</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h3 id="fakerinternet"><a href="#fakerinternet" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>Faker.Internet</code></h3>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">let</span> userName = <span class="hljs-type">Faker</span>.<span class="hljs-type">Internet</span>.userName(~firstName: string=?, ~lastName: string=?, ()); <span class="hljs-comment">/* =&gt; string; "Rage.Max123" */</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">904</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h3 id="fakerlorem"><a href="#fakerlorem" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>Faker.Lorem</code></h3>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">let</span> paragraph = <span class="hljs-type">Faker</span>.<span class="hljs-type">Lorem</span>.paragraph(); <span class="hljs-comment">/* =&gt; string; "Et ratione est totam assumenda ..." */</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-keyword">let</span> paragraph = <span class="hljs-type">Faker</span>.<span class="hljs-type">Lorem</span>.paragraph <span class="hljs-literal">()</span></code></pre>\n      </div>\n    </div>\n  \n<h3 id="fakerdate"><a href="#fakerdate" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>Faker.Date</code></h3>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">let</span> past = <span class="hljs-type">Faker</span>.<span class="hljs-type">Date</span>.past(~years: int=?, ~refDate: <span class="hljs-type">Js</span>.<span class="hljs-type">Date</span>.t=?, ()); <span class="hljs-comment">/* =&gt; Js.Date.t; */</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">904</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h1 id="testing-the-library"><a href="#testing-the-library" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Testing the library</h1>\n<div class="redex-codeblock"><pre class="hljs lang-none"><code>npm <span class="hljs-built_in">test</span></code></pre></div>\n<p>this will compile and execute tests with <code>bs-jest</code></p>\n<h1 id="contributions"><a href="#contributions" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contributions</h1>\n<p>Don\'t hesitate to open a PR with a new binding - while bumping up the amount of covered bindings in the README.\nThere are tests, use them and write the most simple test you can think of to make sure that the bindings work correctly.</p>\n',homepageUrl:"https://github.com/Schniz/bs-faker#readme",repositoryUrl:"https://github.com/Schniz/bs-faker",npmUrl:"https://www.npmjs.com/package/bs-faker",issuesUrl:"https://github.com/Schniz/bs-faker/issues",slug:"/package/bs-faker"}},pathContext:{id:"bs-faker"}}}});
//# sourceMappingURL=path---package-bs-faker-40219cf1c998308a9ede.js.map
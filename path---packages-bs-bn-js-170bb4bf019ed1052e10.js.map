{"version":3,"sources":["webpack:///path---packages-bs-bn-js-170bb4bf019ed1052e10.js","webpack:///./.cache/json/packages-bs-bn-js.json"],"names":["webpackJsonp","1043","module","exports","data","package","id","score","name","version","description","keywords","license","updated","stars","type","quality","popularity","maintenance","readme","homepageUrl","repositoryUrl","npmUrl","issuesUrl","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,SAAWC,GAAA,WAAAC,MAAA,kBAAAC,KAAA,WAAAC,QAAA,QAAAC,YAAA,iCAAAC,UAAA,gBAAAC,QAAA,MAAAC,QAAA,2BAAAC,MAAA,EAAAC,KAAA,YAAAC,QAAA,kBAAAC,WAAA,mBAAAC,YAAA,kBAAAC,OAAA,ogEAAy1EC,YAAA,wCAAAC,cAAA,wCAAAC,OAAA,yCAAAC,UAAA,+CAAAC,KAAA,sBAA8QC,aAAgBnB,GAAA","file":"path---packages-bs-bn-js-170bb4bf019ed1052e10.js","sourcesContent":["webpackJsonp([269317000081117],{\n\n/***/ 1043:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"package\":{\"id\":\"bs-bn.js\",\"score\":0.5819581902337574,\"name\":\"bs-bn.js\",\"version\":\"0.0.2\",\"description\":\"BuckleScript bindings to bn.js\",\"keywords\":[\"bucklescript\"],\"license\":\"MIT\",\"updated\":\"2018-01-15T18:44:20.955Z\",\"stars\":9,\"type\":\"published\",\"quality\":0.7366220834803197,\"popularity\":0.03659009615951159,\"maintenance\":0.9947572329538068,\"readme\":\"<h1>bs-bn.js</h1>\\n<p><a href=\\\"https://bucklescript.github.io/\\\">BuckleScript</a> bindings for <a href=\\\"https://github.com/indutny/bn.js/\\\">bn.js</a>.</p>\\n<h3>State</h3>\\n<p>This is a work in progress, so proceed with caution. However, 90% of the tests in the original library have been migrated to Reason, so the coverage is mostly complete.</p>\\n<p>Constructors, binary ops, arithmetic ops, and reduction ops are available. There are some functions related to prime numbers that have not been bound yet. Feel free to open an issue / PR if you need them.</p>\\n<h3>Installation</h3>\\n<ol>\\n<li>Make sure you have <code>bn.js</code> installed. If not, run <code>npm install bn.js --save</code></li>\\n<li>Install the bindings: <code>npm install bs-bn.js --save</code></li>\\n<li>Add the bindings to <code>bsconfig.json</code></li>\\n</ol>\\n<pre><code class=\\\"language-json\\\">{\\n  \\\"bs-dependencies\\\": [\\n      \\\"bs-bn.js\\\"\\n  ]\\n}\\n</code></pre>\\n<h3>Using it</h3>\\n<p>Create new big numbers from float numbers:</p>\\n<pre><code class=\\\"language-reason\\\">let a = Bn.fromFloat(12345.);\\n</code></pre>\\n<p>You can use <code>float_of_int</code> if you prefer to use ints. The main reason why floats were selected is that ints are trimmed to 32 bits in BuckleScript, so float is a safer choice.</p>\\n<p>You can create big numbers also from other types:</p>\\n<pre><code class=\\\"language-reason\\\">let s = Bn.fromString(~base=16, ~endian=`le, \\\"1A6B765D8CDF\\\");\\nlet a = Bn.fromArray([|1, 2, 3|]);\\nlet b = Bn.fromBuffer(Node.Buffer.fromString(\\\"12345\\\"));\\n</code></pre>\\n<p>Operations always keep the affected big number as the last param to enable piping:</p>\\n<pre><code class=\\\"language-reason\\\">let a = Bn.fromString(~base=16, \\\"ffffffff\\\");\\nlet b = a |> Bn.abs |> Bn.mul(Bn.fromFloat(3.));\\n</code></pre>\\n<h3>Full API</h3>\\n<p>Check the interface file <a href=\\\"https://github.com/jchavarri/bs-bn.js/blob/master/src/Bn.rei\\\"><code>Bn.rei</code></a>.</p>\\n<h3>TODO</h3>\\n<ul>\\n<li>Explore adding infix operators: <code>let result = Bn.Infix.(bn1 + bn2);</code></li>\\n</ul>\\n\",\"homepageUrl\":\"https://github.com/jchavarri/bs-bn.js\",\"repositoryUrl\":\"https://github.com/jchavarri/bs-bn.js\",\"npmUrl\":\"https://www.npmjs.com/package/bs-bn.js\",\"issuesUrl\":\"https://github.com/jchavarri/bs-bn.js/issues\",\"slug\":\"packages/bs-bn.js\"}},\"pathContext\":{\"id\":\"bs-bn.js\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---packages-bs-bn-js-170bb4bf019ed1052e10.js","module.exports = {\"data\":{\"package\":{\"id\":\"bs-bn.js\",\"score\":0.5819581902337574,\"name\":\"bs-bn.js\",\"version\":\"0.0.2\",\"description\":\"BuckleScript bindings to bn.js\",\"keywords\":[\"bucklescript\"],\"license\":\"MIT\",\"updated\":\"2018-01-15T18:44:20.955Z\",\"stars\":9,\"type\":\"published\",\"quality\":0.7366220834803197,\"popularity\":0.03659009615951159,\"maintenance\":0.9947572329538068,\"readme\":\"<h1>bs-bn.js</h1>\\n<p><a href=\\\"https://bucklescript.github.io/\\\">BuckleScript</a> bindings for <a href=\\\"https://github.com/indutny/bn.js/\\\">bn.js</a>.</p>\\n<h3>State</h3>\\n<p>This is a work in progress, so proceed with caution. However, 90% of the tests in the original library have been migrated to Reason, so the coverage is mostly complete.</p>\\n<p>Constructors, binary ops, arithmetic ops, and reduction ops are available. There are some functions related to prime numbers that have not been bound yet. Feel free to open an issue / PR if you need them.</p>\\n<h3>Installation</h3>\\n<ol>\\n<li>Make sure you have <code>bn.js</code> installed. If not, run <code>npm install bn.js --save</code></li>\\n<li>Install the bindings: <code>npm install bs-bn.js --save</code></li>\\n<li>Add the bindings to <code>bsconfig.json</code></li>\\n</ol>\\n<pre><code class=\\\"language-json\\\">{\\n  \\\"bs-dependencies\\\": [\\n      \\\"bs-bn.js\\\"\\n  ]\\n}\\n</code></pre>\\n<h3>Using it</h3>\\n<p>Create new big numbers from float numbers:</p>\\n<pre><code class=\\\"language-reason\\\">let a = Bn.fromFloat(12345.);\\n</code></pre>\\n<p>You can use <code>float_of_int</code> if you prefer to use ints. The main reason why floats were selected is that ints are trimmed to 32 bits in BuckleScript, so float is a safer choice.</p>\\n<p>You can create big numbers also from other types:</p>\\n<pre><code class=\\\"language-reason\\\">let s = Bn.fromString(~base=16, ~endian=`le, \\\"1A6B765D8CDF\\\");\\nlet a = Bn.fromArray([|1, 2, 3|]);\\nlet b = Bn.fromBuffer(Node.Buffer.fromString(\\\"12345\\\"));\\n</code></pre>\\n<p>Operations always keep the affected big number as the last param to enable piping:</p>\\n<pre><code class=\\\"language-reason\\\">let a = Bn.fromString(~base=16, \\\"ffffffff\\\");\\nlet b = a |> Bn.abs |> Bn.mul(Bn.fromFloat(3.));\\n</code></pre>\\n<h3>Full API</h3>\\n<p>Check the interface file <a href=\\\"https://github.com/jchavarri/bs-bn.js/blob/master/src/Bn.rei\\\"><code>Bn.rei</code></a>.</p>\\n<h3>TODO</h3>\\n<ul>\\n<li>Explore adding infix operators: <code>let result = Bn.Infix.(bn1 + bn2);</code></li>\\n</ul>\\n\",\"homepageUrl\":\"https://github.com/jchavarri/bs-bn.js\",\"repositoryUrl\":\"https://github.com/jchavarri/bs-bn.js\",\"npmUrl\":\"https://www.npmjs.com/package/bs-bn.js\",\"issuesUrl\":\"https://github.com/jchavarri/bs-bn.js/issues\",\"slug\":\"packages/bs-bn.js\"}},\"pathContext\":{\"id\":\"bs-bn.js\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/packages-bs-bn-js.json\n// module id = 1043\n// module chunks = 269317000081117"],"sourceRoot":""}
webpackJsonp([40745882597842],{1012:function(e,s){e.exports={data:{packages:{edges:[{node:{id:"@wokalski/vow",keywords:["async"],name:"@wokalski/vow",version:"0.0.3",category:"library",flags:[],platforms:["browser","node"],description:"Almost sound Promises for Bucklescript",type:"published",license:"MIT",updated:"2018-05-02T20:09:04.434Z",stars:null,score:.1503337437247734,quality:.1038024844948209,popularity:.007977980428534915,maintenance:.33257344350382834,slug:"/package/@wokalski/vow"}},{node:{id:"bs-effects",keywords:["async","utilities"],name:"bs-effects",version:"0.8.0",category:"library",flags:["neglected"],platforms:["any"],description:"Bucklescript data structures for effectful sync and async programming",type:"published",license:"BSD-3-Clause",updated:"2018-05-07T18:13:32.901Z",stars:14,score:.5470169626031128,quality:.6115603268124599,popularity:.044076937357646714,maintenance:.9946341042405673,slug:"/package/bs-effects"}},{node:{id:"bs-sentia-promise",keywords:["async"],name:"bs-sentia-promise",version:"0.3.0",category:"library",flags:["neglected"],platforms:["browser","node"],description:"promise library for Ocaml/Reason based on javascript promises.",type:"published",license:"MIT",updated:"2018-05-03T14:37:46.176Z",stars:null,score:.32693682719079686,quality:.7097273130075168,popularity:.02838159603422926,maintenance:.2973859276473188,slug:"/package/bs-sentia-promise"}},{node:{id:"re-sync",keywords:["async"],name:"re-sync",version:"0.4.2",category:"library",flags:["neglected","deprecated"],platforms:["browser","node"],description:"Async support library for Reason/Bucklescript",type:"published",license:"MIT",updated:"2018-05-07T04:28:21.067Z",stars:14,score:.5571862124230741,quality:.6126652180490542,popularity:.06751228837695597,maintenance:.9993067030754952,slug:"/package/re-sync"}},{node:{id:"reason-nact",keywords:["async"],name:"reason-nact",version:"3.3.0",category:"binding",flags:[],platforms:["node"],description:"let reason-nact = (node.js, reason, actors) ⇒ your µ services have never been so typed",type:"published",license:"Apache-2.0",updated:"2018-05-11T09:31:22.221Z",stars:66,score:.6680752810982723,quality:.9629264831292328,popularity:.08342096045572149,maintenance:.9999999999999998,slug:"/package/reason-nact"}},{node:{id:"reason_async",keywords:["async","ppx"],name:"reason_async",version:"0.2.1",category:"library",flags:["neglected"],platforms:["any"],description:"[Clone the example repo](https://github.com/jaredly/reason_async_example) to get started quickly.",type:"published",license:"ISC",updated:"2018-05-01T10:49:58.415Z",stars:null,score:.30624276651980675,quality:.6235857358619166,popularity:.007175030965301689,maintenance:.3333022426382178,slug:"/package/reason_async"}},{node:{id:"bs-promise-monad",keywords:["async","utilities"],name:"bs-promise-monad",version:"0.2.8",category:"library",flags:[],platforms:["browser","node"],description:"A monadic syntax to work with Promise.",type:"published",license:"MIT",updated:"2018-05-06T03:46:32.186Z",stars:0,score:.4909908347903975,quality:.42978456491497274,popularity:.03471168897409439,maintenance:.999732497642779,slug:"/package/bs-promise-monad"}}]}},pathContext:{keyword:"async"}}}});
//# sourceMappingURL=path---keyword-async-598f50c429d2e3c30daa.js.map
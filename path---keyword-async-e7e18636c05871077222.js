webpackJsonp([40745882597842],{1019:function(e,s){e.exports={data:{packages:{edges:[{node:{id:"@wokalski/vow",keywords:["async"],name:"@wokalski/vow",version:"0.0.3",category:"library",flags:[],platforms:["browser","node"],description:"Almost sound Promises for Bucklescript",type:"published",license:"MIT",updated:"2018-05-18T20:24:38.945Z",stars:null,score:.1494282633597906,quality:.10384357085735851,popularity:.005325683218621547,maintenance:.3326034370744728,slug:"/package/@wokalski/vow"}},{node:{id:"bs-effects",keywords:["async","utilities"],name:"bs-effects",version:"0.9.0",category:"library",flags:["neglected"],platforms:["any"],description:"Bucklescript data structures for effectful sync and async programming",type:"published",license:"BSD-3-Clause",updated:"2018-05-20T14:00:51.139Z",stars:14,score:.5482055026387113,quality:.6189136364276882,popularity:.041099970363936915,maintenance:.9947040630943625,slug:"/package/bs-effects"}},{node:{id:"bs-promise-monad",keywords:["async","utilities"],name:"bs-promise-monad",version:"0.2.8",category:"library",flags:[],platforms:["browser","node"],description:"A monadic syntax to work with Promise.",type:"published",license:"MIT",updated:"2018-05-21T17:41:45.916Z",stars:6,score:.49368276271874567,quality:.4298419465081938,popularity:.04235060719466231,maintenance:.9997356178518735,slug:"/package/bs-promise-monad"}},{node:{id:"bs-sentia-promise",keywords:["async"],name:"bs-sentia-promise",version:"0.3.0",category:"library",flags:["neglected"],platforms:["browser","node"],description:"promise library for Ocaml/Reason based on javascript promises.",type:"published",license:"MIT",updated:"2018-05-19T23:25:18.581Z",stars:null,score:.32728907783763617,quality:.7098689592939342,popularity:.02768280613962339,maintenance:.29896973685882205,slug:"/package/bs-sentia-promise"}},{node:{id:"re-sync",keywords:["async"],name:"re-sync",version:"0.4.2",category:"library",flags:["neglected","deprecated"],platforms:["browser","node"],description:"Async support library for Reason/Bucklescript",type:"published",license:"MIT",updated:"2018-05-23T04:20:12.802Z",stars:14,score:.5549199783001708,quality:.6126969683838516,popularity:.06108152533748808,maintenance:.999235296905413,slug:"/package/re-sync"}},{node:{id:"reason-future",keywords:["async"],name:"reason-future",version:"2.1.1",category:"library",flags:[],platforms:["browser","node"],description:"A Js.Promise alternative for ReasonML.",type:"published",license:"MIT",updated:"2018-05-23T03:14:44.845Z",stars:8,score:.6062214442954931,quality:.8137068893904655,popularity:.03464516191398443,maintenance:.9999530594527397,slug:"/package/reason-future"}},{node:{id:"reason-nact",keywords:["async"],name:"reason-nact",version:"4.1.0",category:"binding",flags:[],platforms:["node"],description:"let reason-nact = (node.js, reason, actors) ⇒ your µ services have never been so typed",type:"published",license:"Apache-2.0",updated:"2018-05-19T15:39:00.757Z",stars:71,score:.6643288005011336,quality:.9597885870744834,popularity:.07540635600630655,maintenance:.9999999993616611,slug:"/package/reason-nact"}},{node:{id:"reason_async",keywords:["async","ppx"],name:"reason_async",version:"0.2.1",category:"library",flags:["neglected"],platforms:["any"],description:"[Clone the example repo](https://github.com/jaredly/reason_async_example) to get started quickly.",type:"published",license:"ISC",updated:"2018-05-16T15:27:47.466Z",stars:null,score:.3066228700227469,quality:.6248516179962252,popularity:.007174866287237088,maintenance:.3333033754952754,slug:"/package/reason_async"}}]}},pathContext:{keyword:"async"}}}});
//# sourceMappingURL=path---keyword-async-e7e18636c05871077222.js.map
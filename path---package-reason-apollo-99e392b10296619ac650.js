webpackJsonp([3046832801524],{1194:function(s,a){s.exports={data:{package:{id:"reason-apollo",stars:227,name:"reason-apollo",version:"0.7.4",category:"binding",flags:[],platforms:["node"],description:"Using Apollo client 2 with Reason",keywords:["data fetching","react","graphql"],license:"MIT",updated:"2018-05-01T20:47:25.408Z",type:"published",score:.5308329274522979,quality:.42978611520359344,popularity:.14827772778078144,maintenance:.999999680479847,readme:'<h1 id="reason-apollo"><a href="#reason-apollo" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Reason-apollo</h1>\n<p><a href="https://badge.fury.io/js/reason-apollo"><img src="https://badge.fury.io/js/reason-apollo.svg" alt="npm version"></a>\n<a href="http://www.apollostack.com/#slack"><img src="https://img.shields.io/badge/slack-join-orange.svg" alt="Get on Slack"></a></p>\n<p>Easily use the Apollo Client 2 with Reason</p>\n<h2 id="install-and-setup"><a href="#install-and-setup" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Install and setup</h2>\n<h4 id="install"><a href="#install" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Install</h4>\n<div class="redex-codeblock"><pre class="hljs lang-none"><code>yarn add reason-apollo\n\n<span class="hljs-comment"># Add graphql_ppx</span>\nyarn add --dev graphql_ppx\n\n<span class="hljs-comment"># Add JS dependencies</span>\nyarn add react-apollo apollo-client apollo-cache-inmemory apollo-link apollo-link-context apollo-link-error apollo-link-http graphql graphql-tag</code></pre></div>\n<h4 id="bsconfig"><a href="#bsconfig" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>bsconfig</h4>\n<p>Add <code>reason-apollo</code> to your <code>bs-dependencies</code> and\n<code>graphql_ppx/ppx</code> to your <code>ppx_flags</code></p>\n<p><strong>bsconfig.json</strong></p>\n<div class="redex-codeblock"><pre class="hljs lang-none"><code><span class="hljs-string">"bs-dependencies"</span>: [\n  <span class="hljs-string">"reason-react"</span>,\n  <span class="hljs-string">"reason-apollo"</span>\n],\n<span class="hljs-string">"ppx-flags"</span>: [\n    <span class="hljs-string">"graphql_ppx/ppx"</span>\n]</code></pre></div>\n<h4 id="send-introspection-query"><a href="#send-introspection-query" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>send introspection query</h4>\n<p>This will generate a <code>graphql_schema.json</code> which will be used to safely type your GraphQL queries/mutations.</p>\n<div class="redex-codeblock"><pre class="hljs lang-none"><code>yarn send-introspection-query http:<span class="hljs-comment">//my-api.example.com/api</span></code></pre></div>\n<h2 id="why-reason-apollo"><a href="#why-reason-apollo" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Why reason-apollo?</h2>\n<p>Watch it\'s usage in this video:  </p>\n<p><a href="https://www.youtube.com/watch?v=yMqE37LqRLA"><img src="https://i.ytimg.com/vi/yMqE37LqRLA/hqdefault.jpg?sqp=-oaymwEZCNACELwBSFXyq4qpAwsIARUAAIhCGAFwAQ==&#x26;rs=AOn4CLD9rxIyXtckkxmGAxRn_Uv2mDcXcQ" alt="Watch reason-apollo usage here"></a></p>\n<h1 id="usage"><a href="#usage" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h1>\n<h2 id="create-the-apollo-client"><a href="#create-the-apollo-client" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Create the Apollo Client</h2>\n<p> <strong>Client.re</strong></p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-comment">/* Create an InMemoryCache */</span>\n<span class="hljs-keyword">let</span> inMemoryCache = <span class="hljs-type">ApolloInMemoryCache</span>.createInMemoryCache(());\n\n<span class="hljs-comment">/* Create an HTTP Link */</span>\n<span class="hljs-keyword">let</span> httpLink =\n <span class="hljs-type">ApolloLinks</span>.createHttpLink(~uri=<span class="hljs-string">"http://localhost:3010/graphql"</span>, ());\n\n<span class="hljs-keyword">let</span> instance = <span class="hljs-type">ReasonApollo</span>.createApolloClient(\n ~link=httpLink, \n ~cache=inMemoryCache, \n ()\n);</code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-keyword">let</span> inMemoryCache = <span class="hljs-type">ApolloInMemoryCache</span>.createInMemoryCache <span class="hljs-literal">()</span>\n<span class="hljs-keyword">let</span> httpLink =\n  <span class="hljs-type">ApolloLinks</span>.createHttpLink ~uri:<span class="hljs-string">"http://localhost:3010/graphql"</span> <span class="hljs-literal">()</span>\n<span class="hljs-keyword">let</span> instance =\n  <span class="hljs-type">ReasonApollo</span>.createApolloClient ~link:httpLink ~cache:inMemoryCache <span class="hljs-literal">()</span></code></pre>\n      </div>\n    </div>\n  \n<h2 id="apolloprovider"><a href="#apolloprovider" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ApolloProvider</h2>\n<p>  <strong><em>Index.re</em></strong></p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code>  <span class="hljs-comment">/* \n    Enhance your application with the `ReasonApollo.Provider` \n    passing him your client instance \n  */</span>\n  <span class="hljs-type">ReactDOMRe</span>.renderToElementWithId(\n    &lt;<span class="hljs-type">ReasonApollo</span>.<span class="hljs-type">Provider</span> client=<span class="hljs-type">Client</span>.instance&gt;\n        &lt;<span class="hljs-type">App</span> /&gt;\n    &lt;/<span class="hljs-type">ReasonApollo</span>.<span class="hljs-type">Provider</span>&gt;\n  , <span class="hljs-string">"index"</span>);</code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-keyword">let</span> _ =\n  <span class="hljs-type">ReactDOMRe</span>.renderToElementWithId\n    ((<span class="hljs-type">ReasonApollo</span>.<span class="hljs-type">Provider</span>.createElement ~client:<span class="hljs-type">Client</span>.instance\n        ~children:[((<span class="hljs-type">App</span>.createElement ~children:<span class="hljs-literal">[]</span> <span class="hljs-literal">()</span>)[@<span class="hljs-type">JSX</span> ])] <span class="hljs-literal">()</span>)[@<span class="hljs-type">JSX</span> ])\n    <span class="hljs-string">"index"</span></code></pre>\n      </div>\n    </div>\n  \n<h2 id="query"><a href="#query" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Query</h2>\n<p>  <strong>MyComponent.re</strong></p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-comment">/* Create a GraphQL Query by using the graphql_ppx */</span> \n<span class="hljs-class"><span class="hljs-keyword">module</span> <span class="hljs-title">GetPokemon</span> = [%<span class="hljs-title">graphql</span> </span>{|\n  query getPokemon($name: <span class="hljs-type">String</span>!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}]; \n\n<span class="hljs-class"><span class="hljs-keyword">module</span> <span class="hljs-title">GetPokemonQuery</span> = <span class="hljs-title">ReasonApollo</span>.<span class="hljs-title">CreateQuery</span>(<span class="hljs-title">GetPokemon</span>);\n\n<span class="hljs-title">let</span> <span class="hljs-title">make</span> = (<span class="hljs-title">_children</span>) =&gt; </span>{\n<span class="hljs-comment">/* ... */</span>,\nrender: (<span class="hljs-number">_</span>) =&gt; {\n  <span class="hljs-keyword">let</span> pokemonQuery = <span class="hljs-type">PokemonQuery</span>.make(~name=<span class="hljs-string">"Pikachu"</span>, ());\n  &lt;<span class="hljs-type">GetPokemonQuery</span> variables=pokemonQuery##variables&gt;\n    ...(({result}) =&gt; {\n      <span class="hljs-keyword">switch</span> result {\n         | <span class="hljs-type">NoData</span> =&gt; &lt;div&gt; (<span class="hljs-type">Utils</span>.ste(<span class="hljs-string">"No Data"</span>)) &lt;/div&gt;\n         | <span class="hljs-type">Loading</span> =&gt; &lt;div&gt; (<span class="hljs-type">Utils</span>.ste(<span class="hljs-string">"Loading"</span>)) &lt;/div&gt;\n         | <span class="hljs-type">Error</span>(error) =&gt; &lt;div&gt; (<span class="hljs-type">Utils</span>.ste(error)) &lt;/div&gt;\n         | <span class="hljs-type">Data</span>(response) =&gt; &lt;div&gt; (<span class="hljs-type">Utils</span>.ste(response##pokemon##name)) &lt;/div&gt;\n      }\n    })\n  &lt;/<span class="hljs-type">GetPokemonQuery</span>&gt;\n}\n}</code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">3066</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h2 id="mutation"><a href="#mutation" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Mutation</h2>\n<p>  <strong>MyMutation.re</strong></p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-class"><span class="hljs-keyword">module</span> <span class="hljs-title">AddPokemon</span> = [%<span class="hljs-title">graphql</span> </span>{|\n  mutation addPokemon($name: <span class="hljs-type">String</span>!) {\n      addPokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\n<span class="hljs-class"><span class="hljs-keyword">module</span> <span class="hljs-title">AddPokemonMutation</span> = <span class="hljs-title">ReasonApollo</span>.<span class="hljs-title">CreateMutation</span>(<span class="hljs-title">AddPokemon</span>);\n\n<span class="hljs-title">let</span> <span class="hljs-title">make</span> = (<span class="hljs-title">_children</span>) =&gt; </span>{\n<span class="hljs-comment">/* ... */</span>,\nrender: (<span class="hljs-number">_</span>) =&gt; {  \n  &lt;<span class="hljs-type">AddPokemonMutation</span>&gt;\n    ...((\n      mutation <span class="hljs-comment">/* Mutation to call */</span>, \n      <span class="hljs-number">_</span> <span class="hljs-comment">/* Result of your mutation */</span>\n    ) =&gt; {\n      <span class="hljs-keyword">let</span> dic = <span class="hljs-type">Js</span>.<span class="hljs-type">Dict</span>.empty();\n      <span class="hljs-type">Js</span>.<span class="hljs-type">Dict</span>.<span class="hljs-keyword">set</span>(dic, <span class="hljs-string">"name"</span>, <span class="hljs-type">Js</span>.<span class="hljs-type">Json</span>.string(<span class="hljs-string">"Bob"</span>));\n      <span class="hljs-keyword">let</span> newPokemon = <span class="hljs-type">Js</span>.<span class="hljs-type">Json</span>.object_(dic);\n\n      &lt;div&gt;\n        &lt;button onClick=((_mouseEvent) =&gt; {\n            mutation({\n                <span class="hljs-string">"variables"</span>: <span class="hljs-type">Js</span>.<span class="hljs-type">Nullable</span>.<span class="hljs-keyword">return</span>(newPokemon),\n                <span class="hljs-string">"refetchQueries"</span>: [|<span class="hljs-string">"getAllPokemons"</span>|]\n            }) |&gt; ignore;\n          })&gt; \n          (<span class="hljs-type">Utils</span>.ste(<span class="hljs-string">"Add Pokemon"</span>)) \n        &lt;/button&gt;\n      &lt;/div&gt;\n    })\n  &lt;/<span class="hljs-type">AddPokemonMutation</span>&gt;\n}\n}</code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">3066</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h2 id="apolloconsumer"><a href="#apolloconsumer" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ApolloConsumer</h2>\n<p>If you simply wan\'t to have access to the ApolloClient, you can use the <code>ApolloConsumer</code></p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code>&lt;<span class="hljs-type">ApolloConsumer</span>&gt;\n  ...((apolloClient) =&gt; {\n    <span class="hljs-comment">/* We have access to the client! */</span>\n  })\n&lt;/<span class="hljs-type">ApolloConsumer</span>&gt;</code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-keyword">let</span> _ =\n  ((<span class="hljs-type">ApolloConsumer</span>.createElement\n      ~children:(<span class="hljs-keyword">fun</span> apolloClient  -&gt; <span class="hljs-keyword">object</span> (this)  <span class="hljs-keyword">end</span>) <span class="hljs-literal">()</span>)[@<span class="hljs-type">JSX</span> ])</code></pre>\n      </div>\n    </div>\n  \n<h2 id="faq"><a href="#faq" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FAQ</h2>\n<h3 id="ive-added-the-schema-file-but-my-build-fails-saying-it-couldnt-find-it"><a href="#ive-added-the-schema-file-but-my-build-fails-saying-it-couldnt-find-it" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>I\'ve added the schema file, but my build fails saying it couldn\'t find it</h3>\n<p>In some cases, it seems like there are some differences between the provided <code>send-introspection-query</code>\nand output from tools you might be using to download the schema (such as <code>apollo-codegen</code> or <code>graphql-cli</code>).\nIf your build is failing, please make sure to try with the provided script. In your project root, run:</p>\n<div class="redex-codeblock"><pre class="hljs lang-bash"><code>$ yarn send-introspection-query &lt;url&gt;</code></pre></div>\n',homepageUrl:"https://github.com/apollographql/reason-apollo#readme",repositoryUrl:"https://github.com/apollographql/reason-apollo",npmUrl:"https://www.npmjs.com/package/reason-apollo",issuesUrl:"https://github.com/apollographql/reason-apollo/issues",slug:"/package/reason-apollo"}},pathContext:{id:"reason-apollo"}}}});
//# sourceMappingURL=path---package-reason-apollo-99e392b10296619ac650.js.map
webpackJsonp([40745882597842],{1010:function(e,s){e.exports={data:{packages:{edges:[{node:{id:"@wokalski/vow",keywords:["async"],name:"@wokalski/vow",version:"0.0.3",category:"library",flags:[],platforms:["browser","node"],description:"Almost sound Promises for Bucklescript",type:"published",license:"MIT",updated:"2018-06-18T05:59:41.307Z",stars:null,score:.14925393772148768,quality:.10382737100456056,popularity:.004855677897292607,maintenance:.3325892547316203,slug:"/package/@wokalski/vow"}},{node:{id:"bs-promise-monad",keywords:["async","utilities"],name:"bs-promise-monad",version:"0.2.8",category:"library",flags:[],platforms:["browser","node"],description:"A monadic syntax to work with Promise.",type:"published",license:"MIT",updated:"2018-06-06T04:03:06.875Z",stars:9,score:.48959250666939813,quality:.42981932789601307,popularity:.04765696368769652,maintenance:.9827622028854299,slug:"/package/bs-promise-monad"}},{node:{id:"bs-sentia-promise",keywords:["async"],name:"bs-sentia-promise",version:"0.3.0",category:"library",flags:["neglected"],platforms:["browser","node"],description:"promise library for Ocaml/Reason based on javascript promises.",type:"published",license:"MIT",updated:"2018-06-19T17:30:00.555Z",stars:null,score:.3268908998419631,quality:.7099831036212083,popularity:.027198580734765235,maintenance:.2982184728526651,slug:"/package/bs-sentia-promise"}},{node:{id:"bs-effects",keywords:["async","utilities"],name:"bs-effects",version:"0.9.0",category:"library",flags:["neglected"],platforms:["any"],description:"Bucklescript data structures for effectful sync and async programming",type:"published",license:"BSD-3-Clause",updated:"2018-06-05T01:53:02.236Z",stars:15,score:.5588096370394665,quality:.6190319785122045,popularity:.07099779364227848,maintenance:.9950023306028792,slug:"/package/bs-effects"}},{node:{id:"re-sync",keywords:["async"],name:"re-sync",version:"0.4.2",category:"library",flags:["neglected","deprecated"],platforms:["browser","node"],description:"Async support library for Reason/Bucklescript",type:"published",license:"MIT",updated:"2018-06-07T15:36:32.629Z",stars:14,score:.5561440625586849,quality:.6127960560326509,popularity:.06470785187325342,maintenance:.9990214216950029,slug:"/package/re-sync"}},{node:{id:"reason-future",keywords:["async"],name:"reason-future",version:"2.2.1",category:"library",flags:[],platforms:["browser","node"],description:"A Js.Promise alternative for ReasonML.",type:"published",license:"MIT",updated:"2018-06-10T02:47:52.959Z",stars:27,score:.6643092458834838,quality:.9465716428752979,popularity:.0867254807566244,maintenance:.9999538135887882,slug:"/package/reason-future"}},{node:{id:"reason-nact",keywords:["async"],name:"reason-nact",version:"5.0.0",category:"binding",flags:[],platforms:["node"],description:"let reason-nact = (node.js, reason, actors) ⇒ your µ services have never been so typed",type:"published",license:"Apache-2.0",updated:"2018-06-06T14:17:32.374Z",stars:77,score:.6664100734832534,quality:.9525660664566304,popularity:.08754358156075542,maintenance:1,slug:"/package/reason-nact"}},{node:{id:"reason_async",keywords:["async","ppx"],name:"reason_async",version:"0.2.1",category:"library",flags:["neglected"],platforms:["any"],description:"[Clone the example repo](https://github.com/jaredly/reason_async_example) to get started quickly.",type:"published",license:"ISC",updated:"2018-06-15T19:23:01.392Z",stars:null,score:.3061825234337986,quality:.6251349747619621,popularity:.005674392154240488,maintenance:.33330283928921656,slug:"/package/reason_async"}}]}},pathContext:{keyword:"async"}}}});
//# sourceMappingURL=path---keyword-async-d5cab8badef8a5355295.js.map